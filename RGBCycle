/*
  RGB cycling
  written by Andrew Mazzola
 */
 
// Pin 13 has an LED connected on most Arduino boards.
// give it a name:
int red_led = 13;
int green_led = 12;
int blue_led = 11;

int rCount = 255;
int gCount = 0;
int bCount = 0;
float MAX_STAGE_TIME = 2000; //im milliseconds
float last_time;
float tpf;
float MAX_INTENSITY = 255;


// the setup routine runs once when you press reset:
void setup() {              
  Serial.begin(9600);   //enable debug
  
  // initialize the digital pin as an output.
  pinMode(red_led, OUTPUT);     
  pinMode(green_led, OUTPUT);
  pinMode(blue_led, OUTPUT);
  
  last_time = millis();
}

// the loop routine runs over and over again forever:
void loop() {
  tpf = millis() - last_time;
  last_time = millis();
  
  colorCycle(tpf);
  
  writeColors();
    
  delay(100);               // wait for a bit 
}

int stage = 0;
float timeInStage = 0;
void colorCycle(float tpf)
{
  timeInStage += tpf;
  
  
 if(timeInStage > MAX_STAGE_TIME)
  {
  incrementStage();
  }
  
  float amt = MAX_INTENSITY * (timeInStage / MAX_STAGE_TIME); //adjust this
  Serial.println(amt);
  
  switch(stage)
  {
  case 0: gCount = amt;break;
  case 1: rCount = MAX_INTENSITY - amt;break;
  case 2: bCount = amt;break;
  case 3: gCount = MAX_INTENSITY - amt;break;
  case 4: rCount = amt;break;
  case 5: bCount = MAX_INTENSITY - amt;break;
  }
  
  
}

void incrementStage()
{
  timeInStage = 0;
  stage++;
  if(stage >= 6)
  {
  stage = 0;
  }
}

void writeColors()
{
  
  Serial.print("r: ");
   Serial.println(rCount);
  Serial.print("g: ");
   Serial.println(gCount);
  Serial.print("b: ");
   Serial.println(bCount);
  
  analogWrite(red_led, rCount);  
  analogWrite(green_led, gCount);    
  analogWrite(blue_led, bCount);    
}
